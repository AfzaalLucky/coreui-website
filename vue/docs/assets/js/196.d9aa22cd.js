(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{2192:function(e,a,r){"use strict";r.r(a);var t=r(0),i=Object(t.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"template-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#template-components"}},[e._v("#")]),e._v(" Template components")]),e._v(" "),r("p",[e._v("Base template components that you can use to build your app. "),r("a",{attrs:{href:"https://coreui.io/vue/demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),r("OutboundLink")],1),e._v(" you can watch these components demo in the real app.")]),e._v(" "),r("h2",{attrs:{id:"sidebar-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sidebar-components"}},[e._v("#")]),e._v(" Sidebar components")]),e._v(" "),r("p",[e._v("Sidebar components are dedicated solution for creating the Sidebar. Components are designed to be placed only inside CSidebar component.")]),e._v(" "),r("h3",{attrs:{id:"csidebar-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csidebar-api"}},[e._v("#")]),e._v(" CSidebar API")]),e._v(" "),r("p",[e._v("Main sidebar component. Some styles are available only with CoreUI Pro styles, as mentioned in props.\n"),r("ApiExecutor",{attrs:{filename:"Sidebar"}})],1),e._v(" "),r("h3",{attrs:{id:"csidebarnav"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csidebarnav"}},[e._v("#")]),e._v(" CSidebarNav")]),e._v(" "),r("p",[e._v("Sidebar nav is a wrapper component, which renders children in CScrollbar component. If you need to generate sidebar menu component tree automatically, use CRenderFunction component.")]),e._v(" "),r("h3",{attrs:{id:"csidebarnavitem-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csidebarnavitem-api"}},[e._v("#")]),e._v(" CSidebarNavItem API")]),e._v(" "),r("p",[e._v("Sidebar nav item is a basic unit of the sidebar. By default it contains CLink component with sidebar nav link or sidebar nav label styling. CLink component props are inherited, with changed default values:")]),e._v(" "),r("ul",[r("li",[e._v("'exact' prop changed to true")]),e._v(" "),r("li",[e._v("'activeClass' prop changed to 'c-active'")])]),e._v(" "),r("ApiExecutor",{attrs:{filename:"SidebarNavItem"}}),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/components/link.html"}},[e._v("+ CLink props")])],1),e._v(" "),r("h3",{attrs:{id:"csidebarnavdropdown-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csidebarnavdropdown-api"}},[e._v("#")]),e._v(" CSidebarNavDropdown API")]),e._v(" "),r("p",[e._v("Dropdown used for wrapping groups of menu items. Dropdown can have various default behaviors on route change. This mode is injected from CSidebar 'dropdownMode' prop.\n"),r("ApiExecutor",{attrs:{filename:"SidebarNavDropdown"}})],1),e._v(" "),r("h3",{attrs:{id:"csidebarnavbrand-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csidebarnavbrand-api"}},[e._v("#")]),e._v(" CSidebarNavBrand API")]),e._v(" "),r("p",[e._v("Simple component that inherits "),r("RouterLink",{attrs:{to:"/components/link.html"}},[e._v("CLink")]),e._v(" component functionalities, when link is passed.\n"),r("ApiExecutor",{attrs:{filename:"SidebarBrand"}})],1),e._v(" "),r("h3",{attrs:{id:"sidebar-simple-wrapper-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sidebar-simple-wrapper-components"}},[e._v("#")]),e._v(" Sidebar simple wrapper components")]),e._v(" "),r("p",[e._v("Wrapper components with CoreUI sidebar styling.")]),e._v(" "),r("p",[e._v("Components without default slot:")]),e._v(" "),r("ul",[r("li",[e._v("CSidebarMinimizer - used for minimizing sidebar,")]),e._v(" "),r("li",[e._v("CSidebarNavDivider - used for dividing sidebar sections")])]),e._v(" "),r("p",[e._v("Styled components with default slot for passing the content:")]),e._v(" "),r("ul",[r("li",[e._v("CSidebarClose - used for replacing default close icon,")]),e._v(" "),r("li",[e._v("CSidebarNavTitle - used for naming sidebar sections,")]),e._v(" "),r("li",[e._v("CSidebarFooter - used for sidebar footer,")]),e._v(" "),r("li",[e._v("CSidebarForm - used for sidebar form (i.e. search filter),")]),e._v(" "),r("li",[e._v("CSidebarHeader - used for sidebar header")])]),e._v(" "),r("h2",{attrs:{id:"header-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#header-components"}},[e._v("#")]),e._v(" Header components")]),e._v(" "),r("h3",{attrs:{id:"cheader-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cheader-api"}},[e._v("#")]),e._v(" CHeader API")]),e._v(" "),r("p",[e._v("Header with CoreUI styles\n"),r("ApiExecutor",{attrs:{filename:"Header"}})],1),e._v(" "),r("h3",{attrs:{id:"cheaderbrand-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cheaderbrand-api"}},[e._v("#")]),e._v(" CHeaderBrand API")]),e._v(" "),r("p",[e._v("Simple component that inherits "),r("RouterLink",{attrs:{to:"/components/link.html"}},[e._v("CLink")]),e._v(" component functionalities, when link is passed.\n"),r("ApiExecutor",{attrs:{filename:"HeaderBrand"}})],1),e._v(" "),r("h3",{attrs:{id:"header-simple-wrapper-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#header-simple-wrapper-components"}},[e._v("#")]),e._v(" Header simple wrapper components")]),e._v(" "),r("p",[e._v("Wrapper components with CoreUI sidebar styling:")]),e._v(" "),r("ul",[r("li",[e._v("CHeaderNav - used for grouping header items,")]),e._v(" "),r("li",[e._v("CHeaderNavItem - used as header unit,")]),e._v(" "),r("li",[e._v("CHeaderNavLink - used as header item link (with CLink props),")]),e._v(" "),r("li",[e._v("CSubheader - used for grouping subheader (if you want to use subheader pass withSubheader prop to CHeader),")])]),e._v(" "),r("h2",{attrs:{id:"cfooter-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cfooter-api"}},[e._v("#")]),e._v(" CFooter API")]),e._v(" "),r("p",[e._v("Footer with CoreUI styles\n"),r("ApiExecutor",{attrs:{filename:"Footer"}})],1)],1)}),[],!1,null,null,null);a.default=i.exports}}]);