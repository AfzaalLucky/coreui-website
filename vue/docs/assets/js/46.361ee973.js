(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{563:function(e,n,t){"use strict";t.r(n);var o=t(0),i=Object(o.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("Api",{attrs:{props:[["type","'input'","String","Type of the input. Not applicable to CFormTextarea component."],["plaintext","false","Boolean","Sets element to plaintext. If set it will trigger also readonly property functionality."],["readonly","false","Boolean","Sets readonly attribute."],["lazy","400","Boolean/Number","slot_lazy"]],slots:[["label","undefined","Optional slot for custom label."],["prepend-content","undefined","Optional slot for custom prepend content."],["append-content","undefined","Optional slot for custom append content."],["prepend","undefined","Optional slot for custom prepend."],["append","undefined","Optional slot for custom append."],["label-after-input","undefined","Optional slot for custom label displayed after input."],["valid-feedback","undefined","Optional slot for custom valid feedback."],["invalid-feedback","undefined","Optional slot for custom invalid feedback."],["description","undefined","Optional slot for custom description."]],events:[["update:value","event object","Emitted depending on lazy propery."],["input","event object","Emitted on every input event."],["change","event object","Emitted on every change event."]]},scopedSlots:e._u([{key:"slot_lazy",fn:function(){return[e._v("\n    Determines when value is synchronized with parent component.\n    "),t("li",[e._v("False - only on input change event.")]),e._v(" "),t("li",[e._v("True - on every keypress (might be performance hit in some situations).")]),e._v(" "),t("li",[e._v("Number - after number of miliseconds, when user stop typing.")]),e._v("\n    Despite this prop setting you can still use input and change events independently.\n  ")]},proxy:!0}])})}),[],!1,null,null,null);n.default=i.exports}}]);