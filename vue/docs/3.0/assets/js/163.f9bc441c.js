(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{590:function(r,e,s){"use strict";s.r(e);var a=s(0),t=Object(a.a)({},function(){var r=this,e=r.$createElement,s=r._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[s("h1",{attrs:{id:"progress-bar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#progress-bar","aria-hidden":"true"}},[r._v("#")]),r._v(" Progress bar")]),r._v(" "),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[r._v("#")]),r._v(" Usage")]),r._v(" "),s("CodeExample",{attrs:{filename:"progress/Progress"}}),r._v(" "),s("h2",{attrs:{id:"features"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#features","aria-hidden":"true"}},[r._v("#")]),r._v(" Features")]),r._v(" "),s("ul",[s("li",[r._v("Single or splitted progress bar")]),r._v(" "),s("li",[r._v("Diffrent widths heights and styles available")]),r._v(" "),s("li",[r._v("Concise syntax for single bar")])]),r._v(" "),s("h2",{attrs:{id:"cprogress-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cprogress-api","aria-hidden":"true"}},[r._v("#")]),r._v(" CProgress API")]),r._v(" "),s("p",[r._v("For single bar use CProgress component without children. For splited progress bar (progress bar divided like in second example above) use CProgressBar components as children.")]),r._v(" "),s("br"),r._v(" "),s("ApiExecutor",{attrs:{filename:"Progress"}}),r._v(" "),s("h2",{attrs:{id:"cprogressbar-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cprogressbar-api","aria-hidden":"true"}},[r._v("#")]),r._v(" CProgressBar API")]),r._v(" "),s("p",[r._v("Use as a child component when you want to split progress bar into multiple bars. By default CProgressBar component inherit CProgress props except value and height. You redefine those values by passing.\n"),s("br"),r._v(" "),s("ApiExecutor",{attrs:{filename:"ProgressBar"}})],1)],1)},[],!1,null,null,null);e.default=t.exports}}]);