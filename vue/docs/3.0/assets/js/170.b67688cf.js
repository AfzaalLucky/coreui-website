(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{597:function(t,e,a){"use strict";a.r(e);var s=a(0),o=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"toast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#toast","aria-hidden":"true"}},[t._v("#")]),t._v(" Toast")]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("CodeExample",{attrs:{filename:"toast/Toast"}}),t._v(" "),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features","aria-hidden":"true"}},[t._v("#")]),t._v(" Features")]),t._v(" "),a("ul",[a("li",[t._v("Chose from 8 fixed positions or make toasts static,")]),t._v(" "),a("li",[t._v("Optionally hide toasts automatically after specified time, which resets on toast hover.")]),t._v(" "),a("li",[t._v("CToaster simplify displaying multiple toast. Component is required in case of displaying multiple CToast component in fixed position. Additionally CToast and CToaster share common props, and CToast component inherits this common props, if they are not redefined in CToast.")])]),t._v(" "),a("h2",{attrs:{id:"components-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#components-api","aria-hidden":"true"}},[t._v("#")]),t._v(" components API")]),t._v(" "),a("p",[t._v("CToast and CToaster share the same props, except 'show' and 'reverse' properties.\nThis props are not directly used in CToaster, but are passed to CToast, so you don't have to define them in every CToast component. If you pass the same prop repeatedly in CToast, it will have precedens over inherited props.\n"),a("br"),t._v(" "),a("ApiExecutor",{attrs:{filename:"Toast"}})],1)],1)},[],!1,null,null,null);e.default=o.exports}}]);