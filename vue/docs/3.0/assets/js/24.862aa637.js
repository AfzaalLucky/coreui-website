(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{443:function(e,t,s){"use strict";s.r(t);var i=s(0),n=Object(i.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("Api",{attrs:{props:[["variant","'primary'","String","Defines color variant of alert"],["dismissible","false","Boolean","Determine if alert might be dismissed."],["show","true","Boolean/ Number","slot_show"],["fade","false","Boolean","Enable to turn on fading effect"],["iconHtml","undefined","String","Replaces html of closing button (which is visible when prop dismissible is true)"]],slots:[["default","undefined","Content of the alert. Slot have access to dismiss method, which close alert."]],events:[["dismissed","undefined","Event is emmited, when alert is dismissed"]]},scopedSlots:e._u([{key:"slot_show",fn:function(){return[e._v("\n    Property have following states:\n    "),s("ul",{staticClass:"c-ml-3"},[s("li",[e._v("true: default state, alert is rendered")]),e._v(" "),s("li",[e._v("false: alert is not rendered")]),e._v(" "),s("li",[e._v("Numeric value: Alert will be rendered passed value for time period equal to that number in seconds. ")])]),e._v("\n    If you need to track state of alert set .sync modifier on this prop.\n  ")]},proxy:!0}])})},[],!1,null,null,null);t.default=n.exports}}]);