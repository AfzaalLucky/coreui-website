(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{506:function(e,t,n){"use strict";n.r(t);var o=n(0),s=Object(o.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Api",{attrs:{props:[["variant","undefined","String","Defines color variant of alert"],["closeButton","false","Boolean","Adds close button to the alert."],["show","true","Boolean/Number","slot_show"],["fade","false","Boolean","Enable to turn on fading effect"],["iconHtml","undefined","String","Replaces html of closing button (which is visible when prop dismissible is true)"]],slots:[["default","undefined","Content of the alert. Slot have scoped method 'dismiss', which closes the alert."]],events:[["update:show","undefined","Event is emmited, state of the alert changes"]]},scopedSlots:e._u([{key:"slot_show",fn:function(){return[e._v("\n    Property have following states:\n    "),n("ul",{staticClass:"c-ml-3"},[n("li",[e._v("true: default state, alert is rendered")]),e._v(" "),n("li",[e._v("false: alert is not rendered")]),e._v(" "),n("li",[e._v("Numeric value: Alert will be rendered passed value for time period equal to that number in seconds. ")])]),e._v("\n    If you need to track state of alert set .sync modifier on this prop.\n  ")]},proxy:!0}])})},[],!1,null,null,null);t.default=s.exports}}]);