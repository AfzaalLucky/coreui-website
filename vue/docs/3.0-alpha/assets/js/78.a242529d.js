(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{483:function(e,o,t){"use strict";t.r(o);var r=t(0),n=Object(r.a)({},function(){var e=this.$createElement;return(this._self._c||e)("Api",{attrs:{props:[["content","'content'","String","Content of the popover"],["trigger","'hover'","String","Events which will trigger popover. They have to be separated by space e.g. 'hover click'. You can also pass triggers by modifiers, like in usage example. Available values: 'hover', 'focus', 'click'."],["html","true","Boolean","Enable passing HTML content to popover."],["placement","'right'","String","Placement of the popover. Available values: 'right', 'left', 'top', 'bottom' with 'start' and 'end' suffixes e.g. 'right-start', 'right', 'right-end',."],["delay","0","Number","Delay before popover appear in miliseconds."],["offset","0","Number/String","Offset of the popover in pixels."],["boundaries","'scrollParent'","String","Element which is boundary for popover display . Available values: 'scrollParent', 'window', 'viewport', or id of the boundary element."],["appendToBody","false","Boolean","Append element to body. Useful when there is problem with rendering in some elements."],["closeOnClickOutside","true","Boolean","Close tooltip on click outside, works only if 'click' is the only trigger."],["popperOptions","undefined","Object","Optional property used to pass aditional popper.js properties."]]}})},[],!1,null,null,null);o.default=n.exports}}]);