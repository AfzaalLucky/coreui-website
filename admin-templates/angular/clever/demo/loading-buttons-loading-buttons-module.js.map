{"version":3,"sources":["webpack:///./node_modules/angular2-ladda/module/ladda-config.js","webpack:///./node_modules/angular2-ladda/module/ladda.directive.js","webpack:///./node_modules/angular2-ladda/module/module.js","webpack:///./node_modules/ladda/dist/ladda-themeless.min.css","webpack:///./node_modules/ladda/js/ladda.js","webpack:///./node_modules/spin.js/spin.js","webpack:///./src/app/views/buttons/loading-buttons/loading-buttons-routing.module.ts","webpack:///./src/app/views/buttons/loading-buttons/loading-buttons.component.html","webpack:///./src/app/views/buttons/loading-buttons/loading-buttons.component.ts","webpack:///./src/app/views/buttons/loading-buttons/loading-buttons.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAC3C;AACA;AACA;AACA;AACA,CAAC;AAC0B;AACpB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,8CAA8C;AAC9C,SAAS,yBAAyB;AAClC,MAAM;AACN;AACA,CAAC;AACsB;AACvB,wC;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACC;AAClC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAgB;AAC9C,qCAAqC,8DAAgB;AACrD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAW;AACjC;AACA;AACA,gCAAgC,0BAA0B,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wDAAU,GAAG;AAC7B,SAAS,OAAO,6DAAe,gBAAgB,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG,OAAO,sDAAQ,EAAE,IAAI;AAC5G,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,oBAAoB;AACrD,sBAAsB,OAAO,mDAAK,uBAAuB;AACzD;AACA;AACA,CAAC;AACyB;AAC1B,2C;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACU;AACN;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU,yDAAW;AACtC;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,mCAAmC,+DAAc;AACjD,8BAA8B,+DAAc;AAC5C,iBAAiB,I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AAEA;AACA;AACA;AACO;;AAEP,4CAA4C,SAAS;AACrD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,+CAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE;;AAEF;;;;;;;;;;;;;AC3VA;AAAA;AAAA,gBAAgB,SAAI,IAAI,SAAI;AAC5B,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC1LyC;AACc;AAEe;AAEtE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kFAAuB;QAClC,IAAI,EAAE;YACJ,KAAK,EAAE,yBAAyB;SACjC;KACF;CACF,CAAC;AAMF;IAAA;IAA2C,CAAC;IAA/B,2BAA2B;QAJvC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,2BAA2B,CAAI;IAAD,kCAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBxC,gyEAAgyE,ugE;;;;;;;;;;;;;;;;;;;;;ACAnuE;AAO7D;IALA;QAME,6BAA6B;QAC7B,cAAS,GAAY,KAAK,CAAC;IAK7B,CAAC;IAHC,+CAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IANU,uBAAuB;QALnC,+DAAS,CAAC;;;YAGT,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACPK;AACM;AAE/C,kBAAkB;AAC2B;AAEyB;AAEtE,UAAU;AACqE;AAY/E;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAVhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,2FAA2B;gBAC3B,4DAAY;gBACZ,0DAAW;aACZ;YACD,YAAY,EAAE;gBACZ,kFAAuB;aACxB;SACF,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ","file":"loading-buttons-loading-buttons-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nvar LaddaConfigArgs = /** @class */ (function () {\r\n    function LaddaConfigArgs() {\r\n    }\r\n    return LaddaConfigArgs;\r\n}());\r\nexport { LaddaConfigArgs };\r\nexport var configAttributes = {\r\n    \"data-style\": \"style\",\r\n    \"data-spinner-size\": \"spinnerSize\",\r\n    \"data-spinner-color\": \"spinnerColor\",\r\n    \"data-spinner-lines\": \"spinnerLines\",\r\n};\r\nvar LaddaConfig = /** @class */ (function () {\r\n    function LaddaConfig(config) {\r\n        if (config === void 0) { config = {}; }\r\n        Object.assign(this, config);\r\n    }\r\n    LaddaConfig.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    LaddaConfig.ctorParameters = function () { return [\r\n        { type: LaddaConfigArgs, },\r\n    ]; };\r\n    return LaddaConfig;\r\n}());\r\nexport { LaddaConfig };\r\n//# sourceMappingURL=ladda-config.js.map","import { Directive, ElementRef, Input, Optional, Inject } from '@angular/core';\r\nimport { LaddaConfig, LaddaConfigArgs, configAttributes } from './ladda-config';\r\nimport { create as createLadda } from 'ladda';\r\nvar LaddaDirective = /** @class */ (function () {\r\n    function LaddaDirective(el, config) {\r\n        this.el = el.nativeElement;\r\n        if (!config) {\r\n            return;\r\n        }\r\n        // apply default styles if they aren't overwritten by an attribute\r\n        for (var attribute in configAttributes) {\r\n            var configValue = config[configAttributes[attribute]];\r\n            if (!configValue) {\r\n                continue; // don't waste time reading the attribute\r\n            }\r\n            if (!this.el.getAttribute(attribute)) {\r\n                // attribute isn't set - apply the default config value\r\n                var value = (typeof configValue === \"number\") ? configValue.toString() : configValue;\r\n                this.el.setAttribute(attribute, value);\r\n            }\r\n        }\r\n    }\r\n    LaddaDirective.prototype.ngOnChanges = function (changes) {\r\n        if (!this._ladda) {\r\n            return; // needed since ngOnChanges is called before ngOnInit\r\n        }\r\n        if (changes['loading']) {\r\n            this.updateLadda(changes['loading'].previousValue);\r\n        }\r\n        if (changes['disabled']) {\r\n            this.updateDisabled();\r\n        }\r\n    };\r\n    LaddaDirective.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this._ladda = createLadda(this.el);\r\n        // if the initial loading value isn't false, a timeout of 0 ms\r\n        // is necessary for the calculated spinner size to be correct.\r\n        setTimeout(function () { _this.updateLadda(false); }, 0);\r\n    };\r\n    LaddaDirective.prototype.ngOnDestroy = function () {\r\n        if (this._ladda) {\r\n            this._ladda.remove();\r\n        }\r\n    };\r\n    LaddaDirective.prototype.updateLadda = function (previousValue) {\r\n        var loading = typeof this.loading === 'number' || !!this.loading;\r\n        var wasLoading = typeof previousValue === 'number' || !!previousValue;\r\n        if (!loading) {\r\n            if (wasLoading) {\r\n                this._ladda.stop();\r\n            }\r\n            return this.updateDisabled();\r\n        }\r\n        if (!wasLoading) {\r\n            this._ladda.start();\r\n        }\r\n        if (typeof this.loading === 'number') {\r\n            this._ladda.setProgress(this.loading);\r\n        }\r\n    };\r\n    LaddaDirective.prototype.updateDisabled = function () {\r\n        this.el.disabled = this.disabled;\r\n    };\r\n    LaddaDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[ladda]'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    LaddaDirective.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n        { type: LaddaConfigArgs, decorators: [{ type: Inject, args: [LaddaConfig,] }, { type: Optional },] },\r\n    ]; };\r\n    LaddaDirective.propDecorators = {\r\n        \"loading\": [{ type: Input, args: ['ladda',] },],\r\n        \"disabled\": [{ type: Input, args: ['disabled',] },],\r\n    };\r\n    return LaddaDirective;\r\n}());\r\nexport { LaddaDirective };\r\n//# sourceMappingURL=ladda.directive.js.map","import { NgModule } from '@angular/core';\r\nimport { LaddaDirective } from './ladda.directive';\r\nimport { LaddaConfig } from './ladda-config';\r\nvar LaddaModule = /** @class */ (function () {\r\n    function LaddaModule() {\r\n    }\r\n    LaddaModule.forRoot = function (config) {\r\n        return {\r\n            ngModule: LaddaModule,\r\n            providers: [\r\n                { provide: LaddaConfig, useValue: config }\r\n            ]\r\n        };\r\n    };\r\n    LaddaModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [LaddaDirective],\r\n                    exports: [LaddaDirective],\r\n                },] },\r\n    ];\r\n    return LaddaModule;\r\n}());\r\nexport { LaddaModule };\r\n//# sourceMappingURL=module.js.map","module.exports = \"/*!\\r\\n * Ladda\\r\\n * http://lab.hakim.se/ladda\\r\\n * MIT licensed\\r\\n *\\r\\n * Copyright (C) 2018 Hakim El Hattab, http://hakim.se\\r\\n */@-webkit-keyframes ladda-spinner-line-fade{0%,100%{opacity:0.22}1%{opacity:1}}@keyframes ladda-spinner-line-fade{0%,100%{opacity:0.22}1%{opacity:1}}.ladda-button{position:relative}.ladda-button .ladda-spinner{position:absolute;z-index:2;display:inline-block;width:32px;top:50%;margin-top:0;opacity:0;pointer-events:none}.ladda-button .ladda-label{position:relative;z-index:3}.ladda-button .ladda-progress{position:absolute;width:0;height:100%;left:0;top:0;background:rgba(0,0,0,0.2);display:none;transition:0.1s linear all !important}.ladda-button[data-loading] .ladda-progress{display:block}.ladda-button,.ladda-button .ladda-spinner,.ladda-button .ladda-label{transition:0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) all !important}.ladda-button[data-style=zoom-in],.ladda-button[data-style=zoom-in] .ladda-spinner,.ladda-button[data-style=zoom-in] .ladda-label,.ladda-button[data-style=zoom-out],.ladda-button[data-style=zoom-out] .ladda-spinner,.ladda-button[data-style=zoom-out] .ladda-label{transition:0.3s ease all !important}.ladda-button[data-style=expand-right] .ladda-spinner{right:-6px}.ladda-button[data-style=expand-right][data-size=\\\"s\\\"] .ladda-spinner,.ladda-button[data-style=expand-right][data-size=\\\"xs\\\"] .ladda-spinner{right:-12px}.ladda-button[data-style=expand-right][data-loading]{padding-right:56px}.ladda-button[data-style=expand-right][data-loading] .ladda-spinner{opacity:1}.ladda-button[data-style=expand-right][data-loading][data-size=\\\"s\\\"],.ladda-button[data-style=expand-right][data-loading][data-size=\\\"xs\\\"]{padding-right:40px}.ladda-button[data-style=expand-left] .ladda-spinner{left:26px}.ladda-button[data-style=expand-left][data-size=\\\"s\\\"] .ladda-spinner,.ladda-button[data-style=expand-left][data-size=\\\"xs\\\"] .ladda-spinner{left:4px}.ladda-button[data-style=expand-left][data-loading]{padding-left:56px}.ladda-button[data-style=expand-left][data-loading] .ladda-spinner{opacity:1}.ladda-button[data-style=expand-left][data-loading][data-size=\\\"s\\\"],.ladda-button[data-style=expand-left][data-loading][data-size=\\\"xs\\\"]{padding-left:40px}.ladda-button[data-style=expand-up]{overflow:hidden}.ladda-button[data-style=expand-up] .ladda-spinner{top:-32px;left:50%;margin-left:0}.ladda-button[data-style=expand-up][data-loading]{padding-top:54px}.ladda-button[data-style=expand-up][data-loading] .ladda-spinner{opacity:1;top:26px;margin-top:0}.ladda-button[data-style=expand-up][data-loading][data-size=\\\"s\\\"],.ladda-button[data-style=expand-up][data-loading][data-size=\\\"xs\\\"]{padding-top:32px}.ladda-button[data-style=expand-up][data-loading][data-size=\\\"s\\\"] .ladda-spinner,.ladda-button[data-style=expand-up][data-loading][data-size=\\\"xs\\\"] .ladda-spinner{top:4px}.ladda-button[data-style=expand-down]{overflow:hidden}.ladda-button[data-style=expand-down] .ladda-spinner{top:62px;left:50%;margin-left:0}.ladda-button[data-style=expand-down][data-size=\\\"s\\\"] .ladda-spinner,.ladda-button[data-style=expand-down][data-size=\\\"xs\\\"] .ladda-spinner{top:40px}.ladda-button[data-style=expand-down][data-loading]{padding-bottom:54px}.ladda-button[data-style=expand-down][data-loading] .ladda-spinner{opacity:1}.ladda-button[data-style=expand-down][data-loading][data-size=\\\"s\\\"],.ladda-button[data-style=expand-down][data-loading][data-size=\\\"xs\\\"]{padding-bottom:32px}.ladda-button[data-style=slide-left]{overflow:hidden}.ladda-button[data-style=slide-left] .ladda-label{position:relative}.ladda-button[data-style=slide-left] .ladda-spinner{left:100%;margin-left:0}.ladda-button[data-style=slide-left][data-loading] .ladda-label{opacity:0;left:-100%}.ladda-button[data-style=slide-left][data-loading] .ladda-spinner{opacity:1;left:50%}.ladda-button[data-style=slide-right]{overflow:hidden}.ladda-button[data-style=slide-right] .ladda-label{position:relative}.ladda-button[data-style=slide-right] .ladda-spinner{right:100%;margin-left:0;left:16px}[dir=\\\"rtl\\\"] .ladda-button[data-style=slide-right] .ladda-spinner{right:auto}.ladda-button[data-style=slide-right][data-loading] .ladda-label{opacity:0;left:100%}.ladda-button[data-style=slide-right][data-loading] .ladda-spinner{opacity:1;left:50%}.ladda-button[data-style=slide-up]{overflow:hidden}.ladda-button[data-style=slide-up] .ladda-label{position:relative}.ladda-button[data-style=slide-up] .ladda-spinner{left:50%;margin-left:0;margin-top:1em}.ladda-button[data-style=slide-up][data-loading] .ladda-label{opacity:0;top:-1em}.ladda-button[data-style=slide-up][data-loading] .ladda-spinner{opacity:1;margin-top:0}.ladda-button[data-style=slide-down]{overflow:hidden}.ladda-button[data-style=slide-down] .ladda-label{position:relative}.ladda-button[data-style=slide-down] .ladda-spinner{left:50%;margin-left:0;margin-top:-2em}.ladda-button[data-style=slide-down][data-loading] .ladda-label{opacity:0;top:1em}.ladda-button[data-style=slide-down][data-loading] .ladda-spinner{opacity:1;margin-top:0}.ladda-button[data-style=zoom-out]{overflow:hidden}.ladda-button[data-style=zoom-out] .ladda-spinner{left:50%;margin-left:32px;-webkit-transform:scale(2.5);transform:scale(2.5)}.ladda-button[data-style=zoom-out] .ladda-label{position:relative;display:inline-block}.ladda-button[data-style=zoom-out][data-loading] .ladda-label{opacity:0;-webkit-transform:scale(0.5);transform:scale(0.5)}.ladda-button[data-style=zoom-out][data-loading] .ladda-spinner{opacity:1;margin-left:0;-webkit-transform:none;transform:none}.ladda-button[data-style=zoom-in]{overflow:hidden}.ladda-button[data-style=zoom-in] .ladda-spinner{left:50%;margin-left:-16px;-webkit-transform:scale(0.2);transform:scale(0.2)}.ladda-button[data-style=zoom-in] .ladda-label{position:relative;display:inline-block}.ladda-button[data-style=zoom-in][data-loading] .ladda-label{opacity:0;-webkit-transform:scale(2.2);transform:scale(2.2)}.ladda-button[data-style=zoom-in][data-loading] .ladda-spinner{opacity:1;margin-left:0;-webkit-transform:none;transform:none}.ladda-button[data-style=contract]{overflow:hidden;width:100px}.ladda-button[data-style=contract] .ladda-spinner{left:50%;margin-left:0}.ladda-button[data-style=contract][data-loading]{border-radius:50%;width:52px}.ladda-button[data-style=contract][data-loading] .ladda-label{opacity:0}.ladda-button[data-style=contract][data-loading] .ladda-spinner{opacity:1}.ladda-button[data-style=contract-overlay]{overflow:hidden;width:100px;box-shadow:0px 0px 0px 2000px rgba(0,0,0,0)}.ladda-button[data-style=contract-overlay] .ladda-spinner{left:50%;margin-left:0}.ladda-button[data-style=contract-overlay][data-loading]{border-radius:50%;width:52px;box-shadow:0px 0px 0px 2000px rgba(0,0,0,0.8)}.ladda-button[data-style=contract-overlay][data-loading] .ladda-label{opacity:0}.ladda-button[data-style=contract-overlay][data-loading] .ladda-spinner{opacity:1}[dir=\\\"rtl\\\"] .ladda-spinner>div{left:25% !important}\\n\"","/*!\r\n * Ladda\r\n * http://lab.hakim.se/ladda\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2018 Hakim El Hattab, http://hakim.se\r\n */\r\n\r\n import {Spinner} from 'spin.js';\r\n\r\n// All currently instantiated instances of Ladda\r\nvar ALL_INSTANCES = [];\r\n\r\n/**\r\n * Creates a new instance of Ladda which wraps the\r\n * target button element.\r\n *\r\n * @return An API object that can be used to control\r\n * the loading animation state.\r\n */\r\nexport function create( button ) {\r\n\r\n\tif( typeof button === 'undefined' ) {\r\n\t\tconsole.warn( \"Ladda button target must be defined.\" );\r\n\t\treturn;\r\n\t}\r\n\r\n\t// The button must have the class \"ladda-button\"\r\n\tif ( !button.classList.contains('ladda-button') ) {\r\n\t\tbutton.classList.add( 'ladda-button' );\r\n\t}\r\n\r\n\t// Style is required, default to \"expand-right\"\r\n\tif( !button.hasAttribute( 'data-style' ) ) {\r\n\t\tbutton.setAttribute( 'data-style', 'expand-right' );\r\n\t}\r\n\r\n\t// The text contents must be wrapped in a ladda-label\r\n\t// element, create one if it doesn't already exist\r\n\tif( !button.querySelector( '.ladda-label' ) ) {\r\n\t\tvar laddaLabel = document.createElement( 'span' );\r\n\t\tladdaLabel.className = 'ladda-label';\r\n\t\twrapContent( button, laddaLabel );\r\n\t}\r\n\r\n\t// The spinner component\r\n\tvar spinner,\r\n\t\tspinnerWrapper = button.querySelector( '.ladda-spinner' );\r\n\r\n\t// Wrapper element for the spinner\r\n\tif( !spinnerWrapper ) {\r\n\t\tspinnerWrapper = document.createElement( 'span' );\r\n\t\tspinnerWrapper.className = 'ladda-spinner';\r\n\t}\r\n\r\n\tbutton.appendChild( spinnerWrapper );\r\n\r\n\t// Timer used to delay starting/stopping\r\n\tvar timer;\r\n\r\n\tvar instance = {\r\n\r\n\t\t/**\r\n\t\t * Enter the loading state.\r\n\t\t */\r\n\t\tstart: function() {\r\n\r\n\t\t\t// Create the spinner if it doesn't already exist\r\n\t\t\tif( !spinner ) {\r\n\t\t\t\tspinner = createSpinner( button );\r\n\t\t\t}\r\n\r\n\t\t\tbutton.disabled = true;\r\n\t\t\tbutton.setAttribute( 'data-loading', '' );\r\n\r\n\t\t\tclearTimeout( timer );\r\n\t\t\tspinner.spin( spinnerWrapper );\r\n\r\n\t\t\tthis.setProgress( 0 );\r\n\r\n\t\t\treturn this; // chain\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Enter the loading state, after a delay.\r\n\t\t */\r\n\t\tstartAfter: function( delay ) {\r\n\r\n\t\t\tclearTimeout( timer );\r\n\t\t\ttimer = setTimeout( function() { instance.start(); }, delay );\r\n\r\n\t\t\treturn this; // chain\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Exit the loading state.\r\n\t\t */\r\n\t\tstop: function() {\r\n\r\n\t\t\tif (instance.isLoading()) {\r\n\t\t\t\tbutton.disabled = false;\r\n\t\t\t\tbutton.removeAttribute( 'data-loading' );\t\r\n\t\t\t}\r\n\r\n\t\t\t// Kill the animation after a delay to make sure it\r\n\t\t\t// runs for the duration of the button transition\r\n\t\t\tclearTimeout( timer );\r\n\r\n\t\t\tif( spinner ) {\r\n\t\t\t\ttimer = setTimeout( function() { spinner.stop(); }, 1000 );\r\n\t\t\t}\r\n\r\n\t\t\treturn this; // chain\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Toggle the loading state on/off.\r\n\t\t */\r\n\t\ttoggle: function() {\r\n\t\t\treturn this.isLoading() ? this.stop() : this.start();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the width of the visual progress bar inside of\r\n\t\t * this Ladda button\r\n\t\t *\r\n\t\t * @param {Number} progress in the range of 0-1\r\n\t\t */\r\n\t\tsetProgress: function( progress ) {\r\n\r\n\t\t\t// Cap it\r\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\r\n\r\n\t\t\tvar progressElement = button.querySelector( '.ladda-progress' );\r\n\r\n\t\t\t// Remove the progress bar if we're at 0 progress\r\n\t\t\tif( progress === 0 && progressElement && progressElement.parentNode ) {\r\n\t\t\t\tprogressElement.parentNode.removeChild( progressElement );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( !progressElement ) {\r\n\t\t\t\t\tprogressElement = document.createElement( 'div' );\r\n\t\t\t\t\tprogressElement.className = 'ladda-progress';\r\n\t\t\t\t\tbutton.appendChild( progressElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprogressElement.style.width = ( ( progress || 0 ) * button.offsetWidth ) + 'px';\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tisLoading: function() {\r\n\r\n\t\t\treturn button.hasAttribute( 'data-loading' );\r\n\r\n\t\t},\r\n\r\n\t\tremove: function() {\r\n\r\n\t\t\tclearTimeout( timer );\r\n\r\n\t\t\tbutton.disabled = false;\r\n\t\t\tbutton.removeAttribute( 'data-loading' );\r\n\r\n\t\t\tif( spinner ) {\r\n\t\t\t\tspinner.stop();\r\n\t\t\t\tspinner = null;\r\n\t\t\t}\r\n\r\n\t\t\tALL_INSTANCES.splice( ALL_INSTANCES.indexOf(instance), 1 );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tALL_INSTANCES.push( instance );\r\n\r\n\treturn instance;\r\n\r\n}\r\n\r\n/**\r\n * Binds the target buttons to automatically enter the\r\n * loading state when clicked.\r\n *\r\n * @param target Either an HTML element or a CSS selector.\r\n * @param options\r\n *          - timeout Number of milliseconds to wait before\r\n *            automatically cancelling the animation.\r\n *          - callback A function to be called with the Ladda\r\n *            instance when a target button is clicked.\r\n */\r\nexport function bind( target, options ) {\r\n\r\n\tvar targets;\r\n\r\n\tif( typeof target === 'string' ) {\r\n\t\ttargets = document.querySelectorAll( target );\r\n\t}\r\n\telse if( typeof target === 'object' ) {\r\n\t\ttargets = [ target ];\r\n\t} else {\r\n\t\tthrow new Error('target must be string or object');\r\n\t}\r\n\r\n\toptions = options || {};\r\n\r\n\tfor( var i = 0; i < targets.length; i++ ) {\r\n\t\tbindElement(targets[i], options);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Stops ALL current loading animations.\r\n */\r\nexport function stopAll() {\r\n\r\n\tfor( var i = 0, len = ALL_INSTANCES.length; i < len; i++ ) {\r\n\t\tALL_INSTANCES[i].stop();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n* Get the first ancestor node from an element, having a\r\n* certain type.\r\n*\r\n* @param elem An HTML element\r\n* @param type an HTML tag type (uppercased)\r\n*\r\n* @return An HTML element\r\n*/\r\nfunction getAncestorOfTagType( elem, type ) {\r\n\r\n\twhile ( elem.parentNode && elem.tagName !== type ) {\r\n\t\telem = elem.parentNode;\r\n\t}\r\n\r\n\treturn ( type === elem.tagName ) ? elem : undefined;\r\n\r\n}\r\n\r\nfunction createSpinner( button ) {\r\n\r\n\tvar height = button.offsetHeight,\r\n\t\tspinnerColor,\r\n\t\tspinnerLines;\r\n\r\n\tif( height === 0 ) {\r\n\t\t// We may have an element that is not visible so\r\n\t\t// we attempt to get the height in a different way\r\n\t\theight = parseFloat( window.getComputedStyle( button ).height );\r\n\t}\r\n\r\n\t// If the button is tall we can afford some padding\r\n\tif( height > 32 ) {\r\n\t\theight *= 0.8;\r\n\t}\r\n\r\n\t// Prefer an explicit height if one is defined\r\n\tif( button.hasAttribute( 'data-spinner-size' ) ) {\r\n\t\theight = parseInt( button.getAttribute( 'data-spinner-size' ), 10 );\r\n\t}\r\n\r\n\t// Allow buttons to specify the color of the spinner element\r\n\tif( button.hasAttribute( 'data-spinner-color' ) ) {\r\n\t\tspinnerColor = button.getAttribute( 'data-spinner-color' );\r\n\t}\r\n\r\n\t// Allow buttons to specify the number of lines of the spinner\r\n\tif( button.hasAttribute( 'data-spinner-lines' ) ) {\r\n\t\tspinnerLines = parseInt( button.getAttribute( 'data-spinner-lines' ), 10 );\r\n\t}\r\n\r\n\tvar radius = height * 0.2,\r\n\t\tlength = radius * 0.6,\r\n\t\twidth = radius < 7 ? 2 : 3;\r\n\r\n\treturn new Spinner( {\r\n\t\tcolor: spinnerColor || '#fff',\r\n\t\tlines: spinnerLines || 12,\r\n\t\tradius: radius,\r\n\t\tlength: length,\r\n\t\twidth: width,\r\n\t\tanimation: 'ladda-spinner-line-fade',\r\n\t\tzIndex: 'auto',\r\n\t\ttop: 'auto',\r\n\t\tleft: 'auto',\r\n\t\tclassName: ''\r\n\t} );\r\n\r\n}\r\n\r\nfunction wrapContent( node, wrapper ) {\r\n\r\n\tvar r = document.createRange();\r\n\tr.selectNodeContents( node );\r\n\tr.surroundContents( wrapper );\r\n\tnode.appendChild( wrapper );\r\n\r\n}\r\n\r\nfunction bindElement( element, options ) {\r\n\tif( typeof element.addEventListener !== 'function' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar instance = create( element );\r\n\tvar timeout = -1;\r\n\r\n\telement.addEventListener( 'click', function() {\r\n\r\n\t\t// If the button belongs to a form, make sure all the\r\n\t\t// fields in that form are filled out\r\n\t\tvar valid = true;\r\n\t\tvar form = getAncestorOfTagType( element, 'FORM' );\r\n\r\n\t\tif( typeof form !== 'undefined' && !form.hasAttribute('novalidate') ) {\r\n\t\t\t// Modern form validation\r\n\t\t\tif( typeof form.checkValidity === 'function' ) {\r\n\t\t\t\tvalid = form.checkValidity();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( valid ) {\r\n\t\t\t// This is asynchronous to avoid an issue where disabling\r\n\t\t\t// the button prevents forms from submitting\r\n\t\t\tinstance.startAfter( 1 );\r\n\r\n\t\t\t// Set a loading timeout if one is specified\r\n\t\t\tif( typeof options.timeout === 'number' ) {\r\n\t\t\t\tclearTimeout( timeout );\r\n\t\t\t\ttimeout = setTimeout( instance.stop, options.timeout );\r\n\t\t\t}\r\n\r\n\t\t\t// Invoke callbacks\r\n\t\t\tif( typeof options.callback === 'function' ) {\r\n\t\t\t\toptions.callback.apply( null, [ instance ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}, false );\r\n\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign({}, defaults, opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoadingButtonsComponent } from './loading-buttons.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoadingButtonsComponent,\n    data: {\n      title: 'Loading Buttons - Ladda'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoadingButtonsRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <i class=\\\"icon-cursor\\\"></i> Loading buttons - Ladda\\n      <a href=\\\"https://coreui.io/pro/angular/\\\" class=\\\"badge badge-danger ml-2\\\">CoreUI Pro Component</a>\\n      <div class=\\\"card-header-actions\\\">\\n        <a href=\\\"https://github.com/hakimel/Ladda\\\" class=\\\"card-header-action\\\"><small class=\\\"text-muted\\\">docs</small></a>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <p>\\n        A UI concept which merges loading indicators into the action that invoked them. Primarily intended for use with forms where\\n        it gives users immediate feedback upon submit rather than leaving them wondering while the browser does its thing. For a\\n        real-world example, check out any of the forms on <a href=\\\"http://slides.com\\\">slides.com</a>.\\n      </p>\\n\\n      <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)='toggleLoading()'>Toggle Ladda in button below</button>\\n      </div>\\n\\n      <hr class=\\\"my-4\\\">\\n\\n      <div class=\\\"row text-center\\\">\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>expand-left</h6>\\n          <button class=\\\"btn btn-success btn-ladda\\\" data-style=\\\"expand-left\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>expand-right</h6>\\n          <button class=\\\"btn btn-success btn-ladda\\\" data-style=\\\"expand-right\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>expand-up</h6>\\n          <button class=\\\"btn btn-success btn-ladda\\\" data-style=\\\"expand-up\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>expand-down</h6>\\n          <button class=\\\"btn btn-success btn-ladda\\\" data-style=\\\"expand-down\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>contract</h6>\\n          <button class=\\\"btn btn-danger btn-ladda\\\" data-style=\\\"contract\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>contract-overlay</h6>\\n          <button class=\\\"btn btn-danger btn-ladda\\\" data-style=\\\"contract-overlay\\\" style=\\\"z-index: 10;\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>zoom-in</h6>\\n          <button class=\\\"btn btn-danger btn-ladda\\\" data-style=\\\"zoom-in\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>zoom-out</h6>\\n          <button class=\\\"btn btn-danger btn-ladda\\\" data-style=\\\"zoom-out\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>slide-left</h6>\\n          <button class=\\\"btn btn-info btn-ladda\\\" data-style=\\\"slide-left\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>slide-right</h6>\\n          <button class=\\\"btn btn-info btn-ladda\\\" data-style=\\\"slide-right\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>slide-up</h6>\\n          <button class=\\\"btn btn-info btn-ladda\\\" data-style=\\\"slide-up\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-3 py-4\\\">\\n          <h6>slide-down</h6>\\n          <button class=\\\"btn btn-info btn-ladda\\\" data-style=\\\"slide-down\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n      </div>\\n\\n      <hr class=\\\"my-4\\\">\\n\\n      <h4 class=\\\"text-center\\\">Sizes</h4>\\n      <div class=\\\"row text-center\\\">\\n        <div class=\\\"col-md-4 py-4\\\">\\n          <h6>Small</h6>\\n          <button class=\\\"btn btn-sm btn-primary btn-ladda\\\" data-style=\\\"expand-right\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-4 py-4\\\">\\n          <h6>Normall</h6>\\n          <button class=\\\"btn btn-primary btn-ladda\\\" data-style=\\\"expand-right\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n\\n        <div class=\\\"col-md-4 py-4\\\">\\n          <h6>Large</h6>\\n          <button class=\\\"btn btn-lg btn-primary btn-ladda\\\" data-style=\\\"expand-right\\\" [ladda]='isLoading'>Submit</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  templateUrl: 'loading-buttons.component.html',\n  styleUrls: ['../../../../../node_modules/ladda/dist/ladda-themeless.min.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoadingButtonsComponent {\n  // trigger-variable for Ladda\n  isLoading: boolean = false;\n\n  toggleLoading() {\n    this.isLoading = !this.isLoading;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Loading Buttons\nimport { LaddaModule } from 'angular2-ladda';\n\nimport { LoadingButtonsComponent } from './loading-buttons.component';\n\n// Routing\nimport { LoadingButtonsRoutingModule } from './loading-buttons-routing.module';\n\n@NgModule({\n  imports: [\n    LoadingButtonsRoutingModule,\n    CommonModule,\n    LaddaModule\n  ],\n  declarations: [\n    LoadingButtonsComponent\n  ]\n})\nexport class LoadingButtonsModule { }\n"],"sourceRoot":""}